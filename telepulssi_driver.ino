/*
  Telepulssi TP-KN10 slave LED screen driver
*/

#include <SPI.h>

static uint8_t koira14[] = {
  0x09, 0x00, 0x01, 0x00, 0x12, 0x04, 0x04, 0x04, 0x05, 0x00, 0x00, 0x00, 
  0x16, 0x0A, 0x06, 0x06, 0x03, 0x06, 0x0D, 0x07, 0x16, 0x0A, 0x04, 0x05, 
  0x03, 0x09, 0x05, 0x04, 0x1A, 0x04, 0x04, 0x1F, 0x05, 0x09, 0x05, 0x07, 
  0x1A, 0x00, 0x04, 0x04, 0x09, 0x06, 0x05, 0x07, 0x12, 0x0E, 0x04, 0x04, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
/*0x15, 0x00, 0x0A, 0x1F, 0x15, 0x04, 0x11, 0x00, 0x15, 0x1F, 0x0A, 0x00, 
  0x0A, 0x09, 0x08, 0x00, 0x15, 0x00, 0x0A, 0x1F, 0x15, 0x12, 0x04, 0x04, 
  0x15, 0x1F, 0x0A, 0x00, 0x0A, 0x04, 0x02, 0x04, 0x15, 0x00, 0x0A, 0x1F, 
  0x15, 0x09, 0x11, 0x00, 0x15, 0x1F, 0x0A, 0x00, 0x0A, 0x12, 0x08, 0x00, 
  0x15, 0x00, 0x0A, 0x1F, 0x15, 0x04, 0x04, 0x00, };
*/

void setup() {
	// Set output pins
	pinMode (A5, OUTPUT);
	pinMode (A4, OUTPUT);
	pinMode (A3, OUTPUT);
	pinMode (A2, OUTPUT);
	pinMode (A1, OUTPUT);
	pinMode (A0, OUTPUT);
	pinMode (7, OUTPUT);
	pinMode (6, OUTPUT);
	pinMode (5, OUTPUT);
	pinMode (4, OUTPUT);
	// initialize SPI:
	SPI.begin();
}

uint8_t col_i = 0;
uint8_t row_i = 0;

void loop() {
	static uint8_t row_latch;

	// Main screen turn off
	PORTC = 0xFF;
	PORTD = 0xFF; // Put latch down

	// Latch new data
	digitalWrite(5, LOW);
	digitalWrite(5, HIGH);
	
	if (row_latch) {
		SPI.transfer(1 << row_i);

		// Latch it
		digitalWrite(4, LOW);
		digitalWrite(4, HIGH);
	}
	
	// Main screen turn on.
	if (col_i < 2) {
		PORTD = ~((1 << 6) << col_i);
	} else {
		PORTC = ~(1 << (col_i-2));
	}
	
	// Prepare new data
	col_i++;
	
	// Advance to next row if needed
	if (col_i > 7) {
		col_i = 0;
		row_i++;
		row_latch = true;
		if (row_i > 6) row_i = 0;
	} else {
		row_latch = false;
	}

	// Send new data and sleep a bit. FIXME use clock interrupt
	SPI.transfer(koira14[8*row_i+col_i]);
	delayMicroseconds(200);
}
